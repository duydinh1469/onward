const express = require("express");
const path = require("path");
const cors = require("cors");
const { logger } = require("./middleware/logEvents");
const errorHandler = require("./middleware/errorHandler");
const PORT = 8080;

const app = express();

// custom middleware logger
app.use(logger);

// Cross origin resource sharing
// Remove localhost domain when deploy production
const whitelist = [
  "https://www.your-domain.com",
  "http://127.0.0.1:3000",
  "http://localhost:8080",
];
const corsOptions = {
  origin: (origin, callback) => {
    // add !origin because we run on localhost which has no origin
    // remove !origin when deploy in production
    if (whitelist.indexOf(origin) !== -1 || !origin) {
      // simply put: null mean no error, true mean allow to call
      callback(null, true);
    } else {
      callback(new Error("Not allowed by CORS"));
    }
  },
  optionsSuccessStatus: 200,
};
app.use(cors(corsOptions));

// build-in middleware to handle urlencoded data (form data)
// content-type: application/x-www-form-urlencoded
app.use(express.urlencoded({ extended: false }));

// build-in middleware for json
app.use(express.json());

// serve static files
app.use("/", express.static(path.join(__dirname, "/pulic")));

app.get("/", (req, res) => {
  res.send("hi");
});

app.all("*", (req, res) => {
  res.status(404);
  if (req.accepts("html")) {
    res.sendFile(path.join(__dirname, "views", "404.html"));
  } else if (req.accepts("json")) {
    res.json({ error: "404 Not Found" });
  } else {
    res.type("txt").send("404 Not Found");
  }
});

app.use(errorHandler);

app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
